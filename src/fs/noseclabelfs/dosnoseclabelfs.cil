;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block dos

  (filecon "/boot/efi" dir fs_context)
  (filecon "/boot/efi/.*" any ())

  (filecon "/efi" dir fs_context)
  (filecon "/efi/.*" any ())

  (genfscon "fat" "/" fs_context)
  (genfscon "hfs" "/" fs_context)
  (genfscon "hfsplus" "/" fs_context)
  (genfscon "msdos" "/" fs_context)
  (genfscon "ntfs" "/" fs_context)
  (genfscon "ntfs-3g" "/" fs_context)
  (genfscon "ntfs3" "/" fs_context)
  (genfscon "vfat" "/" fs_context)
  (genfscon "exfat" "/" fs_context)

  (macro boot_file_type_transition_fs ((type ARG1))
         (call .boot.file_type_transition
               (ARG1 fs dir "efi")))

  (macro getattr_fs_dirs ((type ARG1))
         (allow ARG1 fs (dir (getattr))))

  (macro getattr_fs_files ((type ARG1))
         (allow ARG1 fs (file (getattr))))

  (macro map_fs_files ((type ARG1))
         (allow ARG1 fs (file (map))))

  (macro root_file_type_transition_fs ((type ARG1))
         (call .root.file_type_transition
               (ARG1 fs dir "efi")))

  (macro setattr_fs_dirs ((type ARG1))
         (allow ARG1 fs (dir (setattr))))

  (macro setattr_fs_files ((type ARG1))
         (allow ARG1 fs (file (setattr))))

  (macro watch_fs_dirs ((type ARG1))
         (allow ARG1 fs (dir (watch))))

  (blockinherit .noseclabelfs.template)

  (call .rbacsep.exempt.obj.type (fs))

  (call .xattr.associate_fs (fs)))

(in fs.unconfined

    (call .dos.boot_file_type_transition_fs (typeattr))
    (call .dos.root_file_type_transition_fs (typeattr)))
